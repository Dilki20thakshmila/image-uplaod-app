{"ast":null,"code":"var _jsxFileName = \"C:\\\\Windows\\\\System32\\\\image-uplaod-app\\\\Frontend\\\\src\\\\components\\\\ImageUploadForm.js\",\n  _s = $RefreshSig$();\n// ImageUploadForm.js\nimport React, { useState } from 'react';\nimport { Form, Button, Alert, ProgressBar } from 'react-bootstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUploadForm = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [uploadStatus, setUploadStatus] = useState('');\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    const formData = new FormData();\n    formData.append('image', file);\n    try {\n      const response = await axios.post('http://localhost:5000/upload', formData, {\n        onUploadProgress: progressEvent => {\n          const percentage = Math.round(progressEvent.loaded / progressEvent.total * 100);\n          setProgress(percentage);\n        }\n      });\n      setUploadStatus('Upload successful');\n      setFile(null); // Clear the file input field after successful upload\n      setProgress(0); // Reset progress bar\n      console.log('Upload successful', response.data);\n    } catch (error) {\n      setUploadStatus('Error uploading file');\n      console.error('Error uploading file', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formFile\",\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Choose Image File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n      now: progress,\n      label: `${progress}%`,\n      animated: progress > 0 && progress < 100\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), uploadStatus && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: uploadStatus.includes('successful') ? 'success' : 'danger',\n      children: uploadStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUploadForm, \"pJuxaWPpkLCviCH+U79F0aHHndU=\");\n_c = ImageUploadForm;\nexport default ImageUploadForm;\nvar _c;\n$RefreshReg$(_c, \"ImageUploadForm\");","map":{"version":3,"names":["React","useState","Form","Button","Alert","ProgressBar","axios","jsxDEV","_jsxDEV","ImageUploadForm","_s","file","setFile","progress","setProgress","uploadStatus","setUploadStatus","handleFileChange","event","target","files","handleUpload","formData","FormData","append","response","post","onUploadProgress","progressEvent","percentage","Math","round","loaded","total","console","log","data","error","children","Group","controlId","className","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","onChange","variant","onClick","now","label","animated","includes","_c","$RefreshReg$"],"sources":["C:/Windows/System32/image-uplaod-app/Frontend/src/components/ImageUploadForm.js"],"sourcesContent":["// ImageUploadForm.js\r\nimport React, { useState } from 'react';\r\nimport { Form, Button, Alert, ProgressBar } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nconst ImageUploadForm = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [progress, setProgress] = useState(0);\r\n  const [uploadStatus, setUploadStatus] = useState('');\r\n\r\n  const handleFileChange = (event) => {\r\n    setFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/upload', formData, {\r\n        onUploadProgress: (progressEvent) => {\r\n          const percentage = Math.round((progressEvent.loaded / progressEvent.total) * 100);\r\n          setProgress(percentage);\r\n        },\r\n      });\r\n      setUploadStatus('Upload successful');\r\n      setFile(null); // Clear the file input field after successful upload\r\n      setProgress(0); // Reset progress bar\r\n      console.log('Upload successful', response.data);\r\n    } catch (error) {\r\n      setUploadStatus('Error uploading file');\r\n      console.error('Error uploading file', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form>\r\n      <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n        <Form.Label>Choose Image File</Form.Label>\r\n        <Form.Control type=\"file\" onChange={handleFileChange} />\r\n      </Form.Group>\r\n      <Button variant=\"primary\" onClick={handleUpload}>\r\n        Upload\r\n      </Button>\r\n      <ProgressBar now={progress} label={`${progress}%`} animated={progress > 0 && progress < 100} />\r\n      {uploadStatus && <Alert variant={uploadStatus.includes('successful') ? 'success' : 'danger'}>{uploadStatus}</Alert>}\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ImageUploadForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}