{"ast":null,"code":"var _jsxFileName = \"C:\\\\Windows\\\\System32\\\\image-uplaod-app\\\\Frontend\\\\src\\\\components\\\\ImageUploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUploadForm = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      toast.error('Please select an image to upload');\n      return;\n    }\n    setUploading(true);\n    const formData = new FormData();\n    formData.append('image', file);\n    try {\n      const response = await axios.post('http://localhost:5000/upload', formData, {\n        onUploadProgress: progressEvent => {\n          const percentage = Math.round(progressEvent.loaded / progressEvent.total * 100);\n          setProgress(percentage);\n        }\n      });\n      toast.success('Image uploaded successfully!');\n      setFile(null); // Clear the file input field after successful upload\n      console.log('Upload successful', response.data);\n    } catch (error) {\n      toast.error('Error uploading file. Please try again later.');\n      console.error('Error uploading file', error);\n    } finally {\n      setUploading(false);\n      setProgress(0);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formFile\",\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Choose Image File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"file\",\n          onChange: handleFileChange,\n          disabled: uploading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleUpload,\n        disabled: uploading,\n        children: uploading ? 'Uploading...' : 'Upload'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), uploading && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n          variant: \"determinate\",\n          value: progress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: `${progress}%`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUploadForm, \"RYz+mZvG3pHzRnH4OrUnxmaoiWg=\");\n_c = ImageUploadForm;\nexport default ImageUploadForm;\nvar _c;\n$RefreshReg$(_c, \"ImageUploadForm\");","map":{"version":3,"names":["React","useState","Form","Button","axios","toast","ToastContainer","CircularProgress","jsxDEV","_jsxDEV","ImageUploadForm","_s","file","setFile","uploading","setUploading","progress","setProgress","handleFileChange","event","target","files","handleUpload","error","formData","FormData","append","response","post","onUploadProgress","progressEvent","percentage","Math","round","loaded","total","success","console","log","data","children","fileName","_jsxFileName","lineNumber","columnNumber","Group","controlId","className","Label","Control","type","onChange","disabled","variant","onClick","style","textAlign","marginTop","value","_c","$RefreshReg$"],"sources":["C:/Windows/System32/image-uplaod-app/Frontend/src/components/ImageUploadForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nconst ImageUploadForm = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [uploading, setUploading] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  const handleFileChange = (event) => {\r\n    setFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) {\r\n      toast.error('Please select an image to upload');\r\n      return;\r\n    }\r\n\r\n    setUploading(true);\r\n\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/upload', formData, {\r\n        onUploadProgress: (progressEvent) => {\r\n          const percentage = Math.round((progressEvent.loaded / progressEvent.total) * 100);\r\n          setProgress(percentage);\r\n        },\r\n      });\r\n      toast.success('Image uploaded successfully!');\r\n      setFile(null); // Clear the file input field after successful upload\r\n      console.log('Upload successful', response.data);\r\n    } catch (error) {\r\n      toast.error('Error uploading file. Please try again later.');\r\n      console.error('Error uploading file', error);\r\n    } finally {\r\n      setUploading(false);\r\n      setProgress(0);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ToastContainer /> {/* ToastContainer for displaying toast messages */}\r\n      <Form>\r\n        <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n          <Form.Label>Choose Image File</Form.Label>\r\n          <Form.Control type=\"file\" onChange={handleFileChange} disabled={uploading} />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" onClick={handleUpload} disabled={uploading}>\r\n          {uploading ? 'Uploading...' : 'Upload'}\r\n        </Button>\r\n        {uploading && (\r\n          <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n            <CircularProgress variant=\"determinate\" value={progress} />\r\n            <div>{`${progress}%`}</div>\r\n          </div>\r\n        )}\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUploadForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}