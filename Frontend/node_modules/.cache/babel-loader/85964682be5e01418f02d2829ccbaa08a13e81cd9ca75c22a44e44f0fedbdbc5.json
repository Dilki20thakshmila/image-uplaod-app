{"ast":null,"code":"var _jsxFileName = \"C:\\\\Windows\\\\System32\\\\image-uplaod-app\\\\Frontend\\\\src\\\\components\\\\ImageUploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUploadForm = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [message, setMessage] = useState('');\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    const formData = new FormData();\n    formData.append('image', file);\n    try {\n      const response = await axios.post('http://localhost:5000/upload', formData, {\n        onUploadProgress: progressEvent => {\n          const percentage = Math.round(progressEvent.loaded / progressEvent.total * 100);\n          setProgress(percentage);\n        }\n      });\n      setMessage('Upload successful');\n      console.log('Upload successful', response.data);\n    } catch (error) {\n      setMessage('Error uploading file');\n      console.error('Error uploading file', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n      now: progress,\n      label: `${progress}%`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUploadForm, \"DEx4jTfv76HizvBYG6WHh0fiohw=\");\n_c = ImageUploadForm;\nexport default ImageUploadForm;\nvar _c;\n$RefreshReg$(_c, \"ImageUploadForm\");","map":{"version":3,"names":["React","useState","axios","ProgressBar","jsxDEV","_jsxDEV","ImageUploadForm","_s","file","setFile","progress","setProgress","message","setMessage","handleFileChange","event","target","files","handleUpload","formData","FormData","append","response","post","onUploadProgress","progressEvent","percentage","Math","round","loaded","total","console","log","data","error","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","now","label","_c","$RefreshReg$"],"sources":["C:/Windows/System32/image-uplaod-app/Frontend/src/components/ImageUploadForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport ProgressBar from 'react-bootstrap/ProgressBar';\r\n\r\nconst ImageUploadForm = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [progress, setProgress] = useState(0);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleFileChange = (event) => {\r\n    setFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/upload', formData, {\r\n        onUploadProgress: (progressEvent) => {\r\n          const percentage = Math.round((progressEvent.loaded / progressEvent.total) * 100);\r\n          setProgress(percentage);\r\n        },\r\n      });\r\n      setMessage('Upload successful');\r\n      console.log('Upload successful', response.data);\r\n    } catch (error) {\r\n      setMessage('Error uploading file');\r\n      console.error('Error uploading file', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <button onClick={handleUpload}>Upload</button>\r\n      <ProgressBar now={progress} label={`${progress}%`} />\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUploadForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMa,gBAAgB,GAAIC,KAAK,IAAK;IAClCN,OAAO,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAChC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEb,IAAI,CAAC;IAE9B,IAAI;MACF,MAAMc,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,IAAI,CAAC,8BAA8B,EAAEJ,QAAQ,EAAE;QAC1EK,gBAAgB,EAAGC,aAAa,IAAK;UACnC,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAAEH,aAAa,CAACI,MAAM,GAAGJ,aAAa,CAACK,KAAK,GAAI,GAAG,CAAC;UACjFnB,WAAW,CAACe,UAAU,CAAC;QACzB;MACF,CAAC,CAAC;MACFb,UAAU,CAAC,mBAAmB,CAAC;MAC/BkB,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEV,QAAQ,CAACW,IAAI,CAAC;IACjD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdrB,UAAU,CAAC,sBAAsB,CAAC;MAClCkB,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,oBACE7B,OAAA;IAAA8B,QAAA,gBACE9B,OAAA;MAAO+B,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEvB;IAAiB;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjDpC,OAAA;MAAQqC,OAAO,EAAExB,YAAa;MAAAiB,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9CpC,OAAA,CAACF,WAAW;MAACwC,GAAG,EAAEjC,QAAS;MAACkC,KAAK,EAAG,GAAElC,QAAS;IAAG;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrDpC,OAAA;MAAA8B,QAAA,EAAIvB;IAAO;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV,CAAC;AAAClC,EAAA,CApCID,eAAe;AAAAuC,EAAA,GAAfvC,eAAe;AAsCrB,eAAeA,eAAe;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}