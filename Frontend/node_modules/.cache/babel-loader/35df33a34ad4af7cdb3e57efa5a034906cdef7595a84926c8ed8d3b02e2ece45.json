{"ast":null,"code":"var _jsxFileName = \"C:\\\\Windows\\\\System32\\\\image-uplaod-app\\\\Frontend\\\\src\\\\components\\\\ImageViewer.js\",\n  _s = $RefreshSig$();\n// ImageViewer.js\nimport React, { useState, useEffect } from 'react';\nimport { Button, Modal, Image } from 'react-bootstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageViewer = () => {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const [images, setImages] = useState([]);\n  useEffect(() => {\n    fetchImages();\n  }, []);\n  const fetchImages = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/images');\n      setImages(response.data);\n    } catch (error) {\n      console.error('Error fetching images', error);\n    }\n  };\n  const handleReviewClick = () => {\n    fetchImages();\n    setShowModal(true);\n  };\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleReviewClick,\n      children: \"Review Uploaded Images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleCloseModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Uploaded Images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: images.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: image.url,\n            thumbnail: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleCloseModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageViewer, \"lBMzHz2plXlnD6nV75e/VmkQ/yk=\");\n_c = ImageViewer;\nexport default ImageViewer;\nvar _c;\n$RefreshReg$(_c, \"ImageViewer\");","map":{"version":3,"names":["React","useState","useEffect","Button","Modal","Image","axios","jsxDEV","_jsxDEV","ImageViewer","_s","showModal","setShowModal","images","setImages","fetchImages","response","get","data","error","console","handleReviewClick","handleCloseModal","children","variant","onClick","fileName","_jsxFileName","lineNumber","columnNumber","show","onHide","Header","closeButton","Title","Body","map","image","index","src","url","thumbnail","Footer","_c","$RefreshReg$"],"sources":["C:/Windows/System32/image-uplaod-app/Frontend/src/components/ImageViewer.js"],"sourcesContent":["// ImageViewer.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Button, Modal, Image } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nconst ImageViewer = () => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [images, setImages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchImages();\r\n  }, []);\r\n\r\n  const fetchImages = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/images');\r\n      setImages(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching images', error);\r\n    }\r\n  };\r\n\r\n  const handleReviewClick = () => {\r\n    fetchImages();\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"primary\" onClick={handleReviewClick}>\r\n        Review Uploaded Images\r\n      </Button>\r\n\r\n      <Modal show={showModal} onHide={handleCloseModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Uploaded Images</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {images.map((image, index) => (\r\n            <div key={index}>\r\n              <Image src={image.url} thumbnail />\r\n            </div>\r\n          ))}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleCloseModal}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageViewer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}